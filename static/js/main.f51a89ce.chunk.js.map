{"version":3,"sources":["components/hoc/withTitleComponent.jsx","modules/home/index.jsx","modules/about/index.jsx","modules/other/index.jsx","routers/route-config.jsx","modules/story/index.jsx","modules/notFound/index.jsx","routers/router.jsx","App.js","serviceWorker.js","index.js"],"names":["hoc_withTitleComponent","title","WrapperComponent","props","document","react_default","a","createElement","HomePage","withTitle","renderSection","content","className","_this2","this","react_fullpage_default","sectionsColor","render","_ref","state","fullpageApi","Wrapper","PureComponent","Page","offset","caption","first","second","gradient","onClick","Fragment","addons","speed","concat","style","fontSize","AboutComponent","scroll","to","_this","refs","parallax","scrollTo","console","log","pages","ref","horizontal","onScroll","about_Page","OtherComponent","RouteConfig","path","component","modules","exact","router","Switch","map","route","index","Component","Route","key","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","BrowserRouter","src_App_0","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f51a89ce.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './withTitleComponent.scss';\r\n\r\nexport default (title) => (WrapperComponent) => (props) => {\r\n  document.title = title;\r\n  return (\r\n    <div>\r\n      <h1>{title}</h1>\r\n      <WrapperComponent {...props}/>\r\n    </div>\r\n  );\r\n};\r\n","import React, {PureComponent} from 'react';\r\nimport ReactFullpage from '@fullpage/react-fullpage';\r\nimport withTitle from 'components/hoc/withTitleComponent';\r\n\r\nexport default\r\n@withTitle('Home')\r\nclass HomePage extends PureComponent {\r\n\r\n  renderSection = (content) => {\r\n    return (\r\n      <div className=\"section\">\r\n        <h3>{content}</h3>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ReactFullpage\r\n        sectionsColor={[\"#282c34\", \"#ff5f45\", \"#0798ec\"]}\r\n        render={({ state, fullpageApi }) => {\r\n          return (\r\n            <ReactFullpage.Wrapper>\r\n              {this.renderSection('Scroll down')}\r\n              {this.renderSection('Keep going!')}\r\n              {this.renderSection('Scroll up')}\r\n            </ReactFullpage.Wrapper>\r\n          );\r\n        }}\r\n      />\r\n    )\r\n  }\r\n}\r\n","import React, {PureComponent} from 'react';\r\nimport withTitle from 'components/hoc/withTitleComponent';\r\nimport {Parallax, ParallaxLayer} from 'react-spring/addons';\r\n\r\nimport './about.scss';\r\n\r\nconst Page = ({offset, caption, first, second, gradient, onClick}) => (\r\n  <React.Fragment>\r\n    <ParallaxLayer offset={offset} speed={0.2} onClick={onClick}>\r\n      <div className=\"slopeBegin\"/>\r\n    </ParallaxLayer>\r\n\r\n    <ParallaxLayer offset={offset} speed={-0.2} onClick={onClick}>\r\n      <div className={`slopeEnd ${gradient}`}/>\r\n    </ParallaxLayer>\r\n\r\n    <ParallaxLayer className=\"text number\" offset={offset} speed={0.3}>\r\n      <span>0{offset + 1}</span>\r\n    </ParallaxLayer>\r\n\r\n    <ParallaxLayer className=\"text header\" offset={offset} speed={0.4}>\r\n      <span>\r\n        <p style={{fontSize: 20}}>{caption}</p>\r\n        <div className={`stripe ${gradient}`}/>\r\n        <p>{first}</p>\r\n        <p>{second}</p>\r\n      </span>\r\n    </ParallaxLayer>\r\n  </React.Fragment>\r\n);\r\n\r\nexport default @withTitle('About')\r\n\r\nclass AboutComponent extends PureComponent {\r\n\r\n  scroll = to => this.refs.parallax.scrollTo(to);\r\n\r\n  componentDidMount() {\r\n    console.log('parallax instance: ', this.refs.parallax);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Parallax className=\"container\" pages={3} ref=\"parallax\" horizontal onScroll={() => console.log('scrolling')}>\r\n          <Page offset={0} gradient=\"pink\" caption=\"who we are\" first=\"Lorem ipsum\" second=\"dolor sit\"\r\n                onClick={() => this.scroll(1)}/>\r\n          <Page offset={1} gradient=\"teal\" caption=\"what we do\" first=\"consectetur\" second=\"adipiscing elit\"\r\n                onClick={() => this.scroll(2)}/>\r\n          <Page offset={2} gradient=\"tomato\" caption=\"what we want\" first=\"Morbi quis\" second=\"est dignissim\"\r\n                onClick={() => this.scroll(0)}/>\r\n        </Parallax>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, {PureComponent} from 'react';\r\nimport withTitle from 'components/hoc/withTitleComponent';\r\n\r\nexport default\r\n@withTitle('Other')\r\nclass OtherComponent extends PureComponent {\r\n  render() {\r\n    return (\r\n      <div>\r\n        Other Module Work!\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import * as modules from '../modules';\r\n\r\nexport const RouteConfig = [\r\n  {\r\n    path: '/about',\r\n    component: modules.AboutComponent,\r\n    exact: true,\r\n  },\r\n  {\r\n    path: '/story',\r\n    component: modules.StoryComponent,\r\n    exact: true,\r\n  },\r\n  {\r\n    path: '/other',\r\n    component: modules.OtherComponent,\r\n    exact: true,\r\n  },\r\n  {\r\n    path: '/',\r\n    component: modules.HomeComponent,\r\n    exact: true,\r\n  },\r\n  {\r\n    path: '**',\r\n    component: modules.NotFoundComponent,\r\n    exact: true,\r\n  }\r\n];\r\n","import React, {PureComponent} from 'react';\r\nimport withTitle from 'components/hoc/withTitleComponent';\r\n\r\nexport default\r\n@withTitle('Story')\r\nclass StoryComponent extends PureComponent {\r\n  render() {\r\n    return (\r\n      <div>\r\n        Story Module Work!\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, {PureComponent} from 'react';\r\nimport withTitle from 'components/hoc/withTitleComponent';\r\n\r\nexport default\r\n@withTitle('Page Not Found')\r\nclass NotFoundComponent extends PureComponent {\r\n  render() {\r\n    return (\r\n      <div>\r\n        404 Page Not Found\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {Switch, Route} from 'react-router';\r\nimport {RouteConfig} from './route-config';\r\n\r\nexport default () => {\r\n  return (\r\n    <Switch>\r\n      {\r\n        RouteConfig.map((route, index) => {\r\n          const {component: Component, exact, path} = route;\r\n          return (\r\n            <Route key={index} path={path} exact={exact} render={() => <Component />}/>\r\n          )\r\n        })\r\n      }\r\n    </Switch>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\nimport Router from './routers/router';\r\n\r\nimport '@fullpage/react-fullpage/assets/styles/index.scss';\r\nimport './App.scss';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper-contain\">\r\n        <Router/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}